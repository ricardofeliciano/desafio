{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:8000/api';\nconst OAUTH_URL = 'http://localhost:8000/oauth/token';\n\n// Função para registrar um novo usuário\nexport const register = async user => {\n  const response = await axios.post(`${API_URL}/register`, user);\n  return response.data;\n};\n\n// Função para fazer login\nexport const login = async credentials => {\n  axios.defaults.baseURL = API_URL;\n  axios.defaults.headers.common['Content-Type'] = 'application/json';\n  axios.defaults.headers.common['Accept'] = 'application/json';\n  try {\n    const response = await axios.post(OAUTH_URL, {\n      grant_type: 'password',\n      client_id: '3',\n      // Substitua por seu client ID\n      client_secret: 'cSarGjNrhkLRnP65WHBj7yCv2qHpzyCXhB5WYzNB',\n      // Substitua por seu client secret\n      username: credentials.email,\n      password: credentials.password\n    });\n\n    // Armazene o token no localStorage\n    localStorage.setItem('token', response.data.access_token);\n\n    // Adicione o token aos headers padrão do axios\n    axios.defaults.headers.common['Authorization'] = `Bearer ${response.data.access_token}`;\n    return response.data;\n  } catch (error) {\n    console.error('Error logging in:', error);\n    throw error; // Lança o erro para ser tratado no componente chamador\n  }\n};\n\n// Função para obter o usuário autenticado\nexport const getUser = async () => {\n  const token = localStorage.getItem('token');\n  if (!token) {\n    throw new Error('No token found');\n  }\n  const response = await axios.get(`${API_URL}/user`, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  });\n  return response.data;\n};\n\n// Função para fazer logout\nexport const logout = async () => {\n  localStorage.removeItem('token');\n  delete axios.defaults.headers.common['Authorization'];\n};","map":{"version":3,"names":["axios","API_URL","OAUTH_URL","register","user","response","post","data","login","credentials","defaults","baseURL","headers","common","grant_type","client_id","client_secret","username","email","password","localStorage","setItem","access_token","error","console","getUser","token","getItem","Error","get","Authorization","logout","removeItem"],"sources":["C:/Users/WTINFO PC/Desktop/desafio/desafio-frontend/src/components/services/authServices.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_URL = 'http://localhost:8000/api'; \r\nconst OAUTH_URL = 'http://localhost:8000/oauth/token';\r\n\r\n// Função para registrar um novo usuário\r\nexport const register = async (user) => {\r\n    const response = await axios.post(`${API_URL}/register`, user);\r\n    return response.data;\r\n};\r\n\r\n// Função para fazer login\r\nexport const login = async (credentials) => {\r\n    axios.defaults.baseURL = API_URL;\r\n    axios.defaults.headers.common['Content-Type'] = 'application/json';\r\n    axios.defaults.headers.common['Accept'] = 'application/json';\r\n\r\n    try {\r\n        const response = await axios.post(OAUTH_URL, {\r\n            grant_type: 'password',\r\n            client_id: '3',  // Substitua por seu client ID\r\n            client_secret: 'cSarGjNrhkLRnP65WHBj7yCv2qHpzyCXhB5WYzNB',  // Substitua por seu client secret\r\n            username: credentials.email,\r\n            password: credentials.password,\r\n        });\r\n\r\n        // Armazene o token no localStorage\r\n        localStorage.setItem('token', response.data.access_token);\r\n\r\n        // Adicione o token aos headers padrão do axios\r\n        axios.defaults.headers.common['Authorization'] = `Bearer ${response.data.access_token}`;\r\n\r\n        return response.data;\r\n    } catch (error) {\r\n        console.error('Error logging in:', error);\r\n        throw error; // Lança o erro para ser tratado no componente chamador\r\n    }\r\n};\r\n\r\n// Função para obter o usuário autenticado\r\nexport const getUser = async () => {\r\n    const token = localStorage.getItem('token');\r\n    if (!token) {\r\n        throw new Error('No token found');\r\n    }\r\n\r\n    const response = await axios.get(`${API_URL}/user`, {\r\n        headers: {\r\n            Authorization: `Bearer ${token}`\r\n        }\r\n    });\r\n    return response.data;\r\n};\r\n\r\n// Função para fazer logout\r\nexport const logout = async () => {\r\n    localStorage.removeItem('token');\r\n    delete axios.defaults.headers.common['Authorization'];\r\n};\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,2BAA2B;AAC3C,MAAMC,SAAS,GAAG,mCAAmC;;AAErD;AACA,OAAO,MAAMC,QAAQ,GAAG,MAAOC,IAAI,IAAK;EACpC,MAAMC,QAAQ,GAAG,MAAML,KAAK,CAACM,IAAI,CAAC,GAAGL,OAAO,WAAW,EAAEG,IAAI,CAAC;EAC9D,OAAOC,QAAQ,CAACE,IAAI;AACxB,CAAC;;AAED;AACA,OAAO,MAAMC,KAAK,GAAG,MAAOC,WAAW,IAAK;EACxCT,KAAK,CAACU,QAAQ,CAACC,OAAO,GAAGV,OAAO;EAChCD,KAAK,CAACU,QAAQ,CAACE,OAAO,CAACC,MAAM,CAAC,cAAc,CAAC,GAAG,kBAAkB;EAClEb,KAAK,CAACU,QAAQ,CAACE,OAAO,CAACC,MAAM,CAAC,QAAQ,CAAC,GAAG,kBAAkB;EAE5D,IAAI;IACA,MAAMR,QAAQ,GAAG,MAAML,KAAK,CAACM,IAAI,CAACJ,SAAS,EAAE;MACzCY,UAAU,EAAE,UAAU;MACtBC,SAAS,EAAE,GAAG;MAAG;MACjBC,aAAa,EAAE,0CAA0C;MAAG;MAC5DC,QAAQ,EAAER,WAAW,CAACS,KAAK;MAC3BC,QAAQ,EAAEV,WAAW,CAACU;IAC1B,CAAC,CAAC;;IAEF;IACAC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEhB,QAAQ,CAACE,IAAI,CAACe,YAAY,CAAC;;IAEzD;IACAtB,KAAK,CAACU,QAAQ,CAACE,OAAO,CAACC,MAAM,CAAC,eAAe,CAAC,GAAG,UAAUR,QAAQ,CAACE,IAAI,CAACe,YAAY,EAAE;IAEvF,OAAOjB,QAAQ,CAACE,IAAI;EACxB,CAAC,CAAC,OAAOgB,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,mBAAmB,EAAEA,KAAK,CAAC;IACzC,MAAMA,KAAK,CAAC,CAAC;EACjB;AACJ,CAAC;;AAED;AACA,OAAO,MAAME,OAAO,GAAG,MAAAA,CAAA,KAAY;EAC/B,MAAMC,KAAK,GAAGN,YAAY,CAACO,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAI,CAACD,KAAK,EAAE;IACR,MAAM,IAAIE,KAAK,CAAC,gBAAgB,CAAC;EACrC;EAEA,MAAMvB,QAAQ,GAAG,MAAML,KAAK,CAAC6B,GAAG,CAAC,GAAG5B,OAAO,OAAO,EAAE;IAChDW,OAAO,EAAE;MACLkB,aAAa,EAAE,UAAUJ,KAAK;IAClC;EACJ,CAAC,CAAC;EACF,OAAOrB,QAAQ,CAACE,IAAI;AACxB,CAAC;;AAED;AACA,OAAO,MAAMwB,MAAM,GAAG,MAAAA,CAAA,KAAY;EAC9BX,YAAY,CAACY,UAAU,CAAC,OAAO,CAAC;EAChC,OAAOhC,KAAK,CAACU,QAAQ,CAACE,OAAO,CAACC,MAAM,CAAC,eAAe,CAAC;AACzD,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}