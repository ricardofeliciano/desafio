{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\WTINFO PC\\\\Desktop\\\\desafio\\\\desafio-frontend\\\\src\\\\components\\\\security\\\\PrivateRoute.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Navigate, useLocation } from 'react-router-dom';\nimport { getUser } from '../services/authServices';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PrivateRoute = ({\n  element: Component,\n  ...rest\n}) => {\n  _s();\n  const [authenticated, setAuthenticated] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const location = useLocation();\n  useEffect(() => {\n    const checkAuth = async () => {\n      try {\n        // await getUser();\n        setAuthenticated(true);\n      } catch {\n        setAuthenticated(false);\n      } finally {\n        setLoading(false);\n      }\n    };\n    checkAuth();\n  }, []);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 12\n    }, this);\n  }\n  return authenticated ? Component : /*#__PURE__*/_jsxDEV(Navigate, {\n    to: \"/admin/login\",\n    state: {\n      from: location\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 38\n  }, this);\n};\n_s(PrivateRoute, \"2vKSQcfO5KN01vmYVuUBciiF8xE=\", false, function () {\n  return [useLocation];\n});\n_c = PrivateRoute;\nexport default PrivateRoute;\nvar _c;\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"names":["React","useState","useEffect","Navigate","useLocation","getUser","jsxDEV","_jsxDEV","PrivateRoute","element","Component","rest","_s","authenticated","setAuthenticated","loading","setLoading","location","checkAuth","children","fileName","_jsxFileName","lineNumber","columnNumber","to","state","from","_c","$RefreshReg$"],"sources":["C:/Users/WTINFO PC/Desktop/desafio/desafio-frontend/src/components/security/PrivateRoute.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Navigate, useLocation } from 'react-router-dom';\r\nimport { getUser } from '../services/authServices';\r\n\r\nconst PrivateRoute = ({ element: Component, ...rest }) => {\r\n  const [authenticated, setAuthenticated] = useState(false);\r\n  const [loading, setLoading] = useState(true);\r\n  const location = useLocation();\r\n\r\n  useEffect(() => {\r\n    const checkAuth = async () => {\r\n      try {\r\n       // await getUser();\r\n        setAuthenticated(true);\r\n      } catch {\r\n        setAuthenticated(false);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    checkAuth();\r\n  }, []);\r\n\r\n  if (loading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  return authenticated ? Component : <Navigate to=\"/admin/login\" state={{ from: location }} />;\r\n};\r\n\r\nexport default PrivateRoute;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,QAAQ,EAAEC,WAAW,QAAQ,kBAAkB;AACxD,SAASC,OAAO,QAAQ,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,YAAY,GAAGA,CAAC;EAAEC,OAAO,EAAEC,SAAS;EAAE,GAAGC;AAAK,CAAC,KAAK;EAAAC,EAAA;EACxD,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EACzD,MAAM,CAACc,OAAO,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAMgB,QAAQ,GAAGb,WAAW,CAAC,CAAC;EAE9BF,SAAS,CAAC,MAAM;IACd,MAAMgB,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACH;QACCJ,gBAAgB,CAAC,IAAI,CAAC;MACxB,CAAC,CAAC,MAAM;QACNA,gBAAgB,CAAC,KAAK,CAAC;MACzB,CAAC,SAAS;QACRE,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IACDE,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIH,OAAO,EAAE;IACX,oBAAOR,OAAA;MAAAY,QAAA,EAAK;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC9B;EAEA,OAAOV,aAAa,GAAGH,SAAS,gBAAGH,OAAA,CAACJ,QAAQ;IAACqB,EAAE,EAAC,cAAc;IAACC,KAAK,EAAE;MAAEC,IAAI,EAAET;IAAS;EAAE;IAAAG,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC9F,CAAC;AAACX,EAAA,CAxBIJ,YAAY;EAAA,QAGCJ,WAAW;AAAA;AAAAuB,EAAA,GAHxBnB,YAAY;AA0BlB,eAAeA,YAAY;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}